create type "public"."TicketStatus" as enum('in progress', 'resolved', 'unresolved');

create table
    "public"."Tickets" (
        "id" bigint generated by default as identity not null,
        "type" character varying not null,
        "description" text not null,
        "embedding" vector not null,
        "resolution" text,
        "status" "TicketStatus" not null default 'in progress'::"TicketStatus",
        "isSatisfactory" boolean not null default false,
        "UserId" uuid,
        "createdAt" timestamp with time zone not null default now(),
        "updatedAt" timestamp with time zone not null default now()
    );

alter table "public"."Tickets" enable row level security;

create unique index "Tickets_pkey" on public."Tickets" using btree (id);

alter table "public"."Tickets"
add constraint "Tickets_pkey" primary key using index "Tickets_pkey";

alter table "public"."Tickets"
add constraint "Tickets_UserId_fkey" foreign key ("UserId") references "Users" (id) on delete restrict not valid;

alter table "public"."Tickets" validate constraint "Tickets_UserId_fkey";