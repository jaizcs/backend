create type "public"."MessageRole" as enum('system', 'ai', 'assistant', 'customer');

create table
    "public"."Messages" (
        "id" bigint generated by default as identity not null,
        "message" text not null,
        "role" "MessageRole" not null,
        "TicketId" bigint not null,
        "UserId" uuid,
        "createdAt" timestamp with time zone not null default now(),
        "updatedAt" timestamp with time zone not null default now()
    );

alter table "public"."Messages" enable row level security;

create unique index "Messages_pkey" on public."Messages" using btree (id);

alter table "public"."Messages"
add constraint "Messages_pkey" primary key using index "Messages_pkey";

alter table "public"."Messages"
add constraint "Messages_TicketId_fkey" foreign key ("TicketId") references "Tickets" (id) on delete cascade not valid;

alter table "public"."Messages" validate constraint "Messages_TicketId_fkey";

alter table "public"."Messages"
add constraint "Messages_UserId_fkey" foreign key ("UserId") references "Users" (id) on delete restrict not valid;

alter table "public"."Messages" validate constraint "Messages_UserId_fkey";